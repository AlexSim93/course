@charset "UTF-8";
/*! normalize.css v8.0.0 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */ }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none; }

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none; }

.main::after {
  content: "";
  display: table;
  clear: both; }

.signin-form__submit, .signin-form__reset {
  height: 35px;
  max-width: 90%;
  min-width: 50px;
  margin-top: 10px;
  margin-bottom: 10px;
  color: white;
  border: 0 solid black;
  outline: none;
  cursor: pointer; }

.body {
  min-width: 440px;
  background: #e6e6e6; }

.header {
  background: LightGrey;
  font-family: Arial, sans-serif; }

.navbar {
  box-sizing: border-box;
  padding: 10px;
  font-family: Arial, sans-serif; }
  .navbar__menu {
    padding: 0;
    margin: 0; }
  .navbar__menu-item {
    display: inline-block;
    margin: 10px 0 10px 10px;
    list-style-type: none; }
    .navbar__menu-item_separated {
      margin-left: 25px; }
  .navbar__menu-link {
    display: block;
    padding: 15px 20px;
    width: 140px;
    color: black;
    background-color: white;
    text-decoration: none;
    text-align: center; }
    .navbar__menu-link:hover {
      background: AntiqueWhite; }
    .navbar__menu-link_style_important {
      color: white;
      background: orange; }
      .navbar__menu-link_style_important:hover {
        background: OrangeRed; }

.main {
  min-height: calc(100vh - 78px - 130px);
  min-width: 320px;
  background: #e6e6e6;
  font-family: Arial, sans-serif; }
  .main__title {
    margin: 0px;
    padding: 20px;
    text-align: center; }
  .main__col-1 {
    float: left;
    box-sizing: border-box;
    padding: 0 10px;
    width: 40%; }
  .main__col-2 {
    float: right;
    box-sizing: border-box;
    padding: 0 5px 50px;
    width: 60%; }

.sidebar {
  background: white;
  font-family: Arial, sans-serif; }
  .sidebar_bordered {
    border-radius: 3px;
    border: 2px solid Silver; }

.signin-form {
  padding: 20px 15px;
  font-family: Arial, sans-serif; }
  .signin-form__input-container {
    padding: 10px; }
  .signin-form__text-input {
    max-width: 90%; }
  .signin-form__buttons-container {
    margin: 10px 15px; }
  .signin-form__submit {
    width: 120px;
    background: #27AE60; }
    .signin-form__submit:hover {
      background: Green; }
    .signin-form__submit:active {
      background: DarkGreen; }
  .signin-form__reset {
    width: 80px;
    margin-left: 15px;
    background: #2980B9; }
    .signin-form__reset:hover {
      background: #1d5ec6; }
    .signin-form__reset:active {
      background: MidnightBlue; }

.news-block {
  position: relative;
  box-sizing: border-box;
  padding: 10px 15px 30px 15px;
  /* padding-bottom равен половине высоты абсолютно позиционированного блока */
  background: Silver;
  font-family: Arial, sans-serif;
  border-radius: 10px;
  box-shadow: inset 0 0 7px black; }
  .news-block__sticker {
    position: absolute;
    right: 30px;
    bottom: -30px;
    /* Равен половине высоты блока */ }
  .news-block__news-article {
    margin: 0 20px; }

.news-article {
  box-sizing: border-box;
  font-family: Arial, sans-serif; }
  .news-article__title {
    margin: 0;
    padding: 20px 10px; }
    .news-article__title_type_important {
      font-size: 1.8em; }
  .news-article__content {
    margin: 0;
    padding: 0 10px 10px; }
  .news-article_type_important {
    border-radius: 0px;
    border: 2px dotted red; }

.sticker {
  height: 60px;
  width: 150px;
  background-color: Crimson;
  color: white;
  font-family: Arial, sans-serif;
  line-height: 60px;
  /* Равен высоте блока */
  text-align: center;
  border-radius: 50%; }
  .sticker__text {
    display: inline-block;
    line-height: 1.25;
    font-size: 20px;
    vertical-align: middle; }

.footer {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
  width: 100%;
  height: 130px;
  color: white;
  background: #34495E;
  font-family: Arial, sans-serif; }
  .footer__text {
    text-align: center;
    margin: 0;
    padding: 20px 15px 0px; }
  .footer__copyright {
    margin: 0;
    padding: 20px 15px 10px;
    text-align: center; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
